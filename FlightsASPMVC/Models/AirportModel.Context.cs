//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlightsASPMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class airportEntities1 : DbContext
    {
        public airportEntities1()
            : base("name=airportEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<airline> airline { get; set; }
        public virtual DbSet<airport> airport { get; set; }
        public virtual DbSet<baggage> baggage { get; set; }
        public virtual DbSet<brigade> brigade { get; set; }
        public virtual DbSet<city> city { get; set; }
        public virtual DbSet<country> country { get; set; }
        public virtual DbSet<department> department { get; set; }
        public virtual DbSet<employee> employee { get; set; }
        public virtual DbSet<employee_type> employee_type { get; set; }
        public virtual DbSet<flight> flight { get; set; }
        public virtual DbSet<flight_class> flight_class { get; set; }
        public virtual DbSet<landing> landing { get; set; }
        public virtual DbSet<passenger> passenger { get; set; }
        public virtual DbSet<plane> plane { get; set; }
        public virtual DbSet<plane_inspections> plane_inspections { get; set; }
        public virtual DbSet<plane_inspections_ended> plane_inspections_ended { get; set; }
        public virtual DbSet<plane_model> plane_model { get; set; }
        public virtual DbSet<plane_repairs> plane_repairs { get; set; }
        public virtual DbSet<plane_repairs_ended> plane_repairs_ended { get; set; }
        public virtual DbSet<registration> registration { get; set; }
        public virtual DbSet<sortie> sortie { get; set; }
        public virtual DbSet<ticket> ticket { get; set; }
        public virtual DbSet<brigade_list> brigade_list { get; set; }
        public virtual DbSet<delayed_landings> delayed_landings { get; set; }
        public virtual DbSet<employee_list> employee_list { get; set; }
        public virtual DbSet<pilots_with_med_examination> pilots_with_med_examination { get; set; }
        public virtual DbSet<pilots_without_med_examination> pilots_without_med_examination { get; set; }
        public virtual DbSet<plane_info> plane_info { get; set; }
        public virtual DbSet<planes> planes { get; set; }
        public virtual DbSet<sorties_with_passengers> sorties_with_passengers { get; set; }
        public virtual DbSet<department_view> department_view { get; set; }
        public virtual DbSet<airline_statistics> airline_statistics { get; set; }
        public virtual DbSet<flight_class_stat> flight_class_stat { get; set; }
        public virtual DbSet<flight_info> flight_info { get; set; }
        public virtual DbSet<flights_by_airline_in_day> flights_by_airline_in_day { get; set; }
        public virtual DbSet<sorties_in_month> sorties_in_month { get; set; }
    
        public virtual int flight_add(Nullable<int> team_id, Nullable<int> flight_class_id, Nullable<int> plane_id, Nullable<System.DateTime> sortie_time, Nullable<System.DateTime> landing_time)
        {
            var team_idParameter = team_id.HasValue ?
                new ObjectParameter("team_id", team_id) :
                new ObjectParameter("team_id", typeof(int));
    
            var flight_class_idParameter = flight_class_id.HasValue ?
                new ObjectParameter("flight_class_id", flight_class_id) :
                new ObjectParameter("flight_class_id", typeof(int));
    
            var plane_idParameter = plane_id.HasValue ?
                new ObjectParameter("plane_id", plane_id) :
                new ObjectParameter("plane_id", typeof(int));
    
            var sortie_timeParameter = sortie_time.HasValue ?
                new ObjectParameter("sortie_time", sortie_time) :
                new ObjectParameter("sortie_time", typeof(System.DateTime));
    
            var landing_timeParameter = landing_time.HasValue ?
                new ObjectParameter("landing_time", landing_time) :
                new ObjectParameter("landing_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_add", team_idParameter, flight_class_idParameter, plane_idParameter, sortie_timeParameter, landing_timeParameter);
        }
    
        public virtual int flight_change_plane(Nullable<int> flight_id, Nullable<int> plane_id)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            var plane_idParameter = plane_id.HasValue ?
                new ObjectParameter("plane_id", plane_id) :
                new ObjectParameter("plane_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_change_plane", flight_idParameter, plane_idParameter);
        }
    
        public virtual int flight_change_team(Nullable<int> flight_id, Nullable<int> team_id)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            var team_idParameter = team_id.HasValue ?
                new ObjectParameter("team_id", team_id) :
                new ObjectParameter("team_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_change_team", flight_idParameter, team_idParameter);
        }
    
        public virtual int flight_generate_next(Nullable<int> flight_class_id, Nullable<System.DateTime> starting_date, Nullable<int> team_id, Nullable<int> plane_id)
        {
            var flight_class_idParameter = flight_class_id.HasValue ?
                new ObjectParameter("flight_class_id", flight_class_id) :
                new ObjectParameter("flight_class_id", typeof(int));
    
            var starting_dateParameter = starting_date.HasValue ?
                new ObjectParameter("starting_date", starting_date) :
                new ObjectParameter("starting_date", typeof(System.DateTime));
    
            var team_idParameter = team_id.HasValue ?
                new ObjectParameter("team_id", team_id) :
                new ObjectParameter("team_id", typeof(int));
    
            var plane_idParameter = plane_id.HasValue ?
                new ObjectParameter("plane_id", plane_id) :
                new ObjectParameter("plane_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_generate_next", flight_class_idParameter, starting_dateParameter, team_idParameter, plane_idParameter);
        }
    
        public virtual int flight_landing_do(Nullable<int> flight_id)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_landing_do", flight_idParameter);
        }
    
        public virtual int flight_landing_move(Nullable<int> flight_id, Nullable<System.TimeSpan> delta, string reasont)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            var deltaParameter = delta.HasValue ?
                new ObjectParameter("delta", delta) :
                new ObjectParameter("delta", typeof(System.TimeSpan));
    
            var reasontParameter = reasont != null ?
                new ObjectParameter("reasont", reasont) :
                new ObjectParameter("reasont", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_landing_move", flight_idParameter, deltaParameter, reasontParameter);
        }
    
        public virtual int flight_sortie_cancele(Nullable<int> flight_id, string reasont)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            var reasontParameter = reasont != null ?
                new ObjectParameter("reasont", reasont) :
                new ObjectParameter("reasont", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_sortie_cancele", flight_idParameter, reasontParameter);
        }
    
        public virtual int flight_sortie_move(Nullable<int> flight_id, Nullable<System.TimeSpan> delta, string reasont)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            var deltaParameter = delta.HasValue ?
                new ObjectParameter("delta", delta) :
                new ObjectParameter("delta", typeof(System.TimeSpan));
    
            var reasontParameter = reasont != null ?
                new ObjectParameter("reasont", reasont) :
                new ObjectParameter("reasont", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_sortie_move", flight_idParameter, deltaParameter, reasontParameter);
        }
    
        public virtual int plane_inspection_report(Nullable<int> inspection_id, string conclusion_val, string comment_val)
        {
            var inspection_idParameter = inspection_id.HasValue ?
                new ObjectParameter("inspection_id", inspection_id) :
                new ObjectParameter("inspection_id", typeof(int));
    
            var conclusion_valParameter = conclusion_val != null ?
                new ObjectParameter("conclusion_val", conclusion_val) :
                new ObjectParameter("conclusion_val", typeof(string));
    
            var comment_valParameter = comment_val != null ?
                new ObjectParameter("comment_val", comment_val) :
                new ObjectParameter("comment_val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("plane_inspection_report", inspection_idParameter, conclusion_valParameter, comment_valParameter);
        }
    
        public virtual int flight_sortie_do(Nullable<int> flight_id)
        {
            var flight_idParameter = flight_id.HasValue ?
                new ObjectParameter("flight_id", flight_id) :
                new ObjectParameter("flight_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("flight_sortie_do", flight_idParameter);
        }
    }
}
